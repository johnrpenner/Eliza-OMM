// ELIZA

// Original LISP version by Joseph Weizenbaum at MIT 1965
// BASIC version by Jeff Shrager 1973; published Creative Computing 1977
// Objective-C version for iOS by John Roland Penner 2015

/*
| THX-1138::OMM 0910: Hans Memling Christ Giving His Blessing (1478)
| You are a true believer, blessings of the State, blessings of the masses. 
| Work hard, increase production, prevent accidents and be happy. 
*/

// My time is yours. 
// Proceed. 
// Yes, I understand. 
// Excellent. 
// Could you be more specific? 
// What's Wrong!? 

> TO DO WHAT IT DOES: 
	- get string from user
	- find keyword tokens in string
	- for each keyword, translate following PRONOUN tokens (i > you; are > am)
	- lookup reply based on keyword + translated token

// KEYWORDS[36]
	- I Am, You Are, Why Dont You, Computer, You

// CONJUGATIONS/TRANSLATIONS[12]
	- if ONE member of PAIR is FOUND > the other is substituted for it. 
		- I|YOU, AM|ARE
	- to modify keywords, translations, and replies, you must
		update N1, N2, N3 and/or the numerical data. 
	- if you add 'ME' and 'YOU', include a nonprinting char in YOU
		to prevent Substituting I > YOU > ME, this means YOU will 
		always be assumed to be the subject of a verb, never the object,
		but "resolving that difficulty is a whole different problem". 

// REPLIES[112]
	- groups according to [KEYWORD]
	- no fixed number of replies for each keyword
	- rules ending in * to be followed by «translated token»

// REPLY INDICES[112]
	- for each keyword[INDEX, numSTRINGS]
	- e.g. fifth pair (10, 4) = replies for fifth keyword ("I dont")
		start with the tenth reply string, and there are 4 replies. 


--| PROGRAMME LISTING |----- 

// ELIZA

// Original LISP version by Joseph Weizenbaum at MIT 1965. 
// BASIC version by Jeff Shrager 1973; and Steve North, Creative Computing 1977. 
// Objective-C version for iOS by John Roland Penner 2015. 


// --- DECLARATIONS --- 

var R[], S[], N[]
var I:String	Input String
var K:String	Keyword String
var C:String	Translated or conjugated string
var F:String	Reply String (also used to save K$ in scanning for keyword)
var R, S:String	Used in conjugation process
var P:String	Previous input string
var Z:string	Scratch (used for simulating RESTORE NNNN statement)
var	N1:int		Number of Keywords
var N2:int		Number of Conjugation Strings
var N3:int		Number of Replies
var K:int		Keyword Number
var S, T:int	Used to save K and L when scanning for Keyword
var X, L:int	Scratch where X loops and L scans through Strings
var V:int		Used for scanning for keyword string


// --- INITIALIZATION ---

// N1, N2, N3 (Number of KEYWORDS, TRANSLATIONS, and REPLIES)
// S(keyword#) = ordinal# of the start of the Reply Strings for a given keyword
// R(keyword#) = actual reply to be used next
// N(keyword#) = num of last reply for that keyword

DIM C$(72), I$(72), K$(72), F$(72), S$(72), R$(72), P$(72), Z$(72)
DIM S(36), R(36), N(36)
N1=36: N2=12: N3=112

FOR X = 1 TO N1+N2+N3 : READ Z$ : NEXT X

FOR X = 1 TO N1
	READ S(X), L : R(X)=S(X) : N(X)=S(X)+L-1
NEXT X

PRINT "Hi! I'm Eliza. What is your problem? "


// --- USER INPUT --- 

// prefix + suffix one space
// remove apostrophes (so DONT and DON'T are equivalent)
// stop if 'SHUT' is found (user said 'shut up' lol)

userInput() {
	INPUT I$
	I$ = " " + I$ + " "
	
	// find anywhere within input string
	FOR L = 1 TO LEN(I$) {
		
		// get rid of ' marks
		while ( MID$( I$, L, 1) = "'" ) {
			I$ = LEFT$(I$, L-1) + RIGHT$(I$, LEN(I$)-L )
			}
		
		// test for exit
		IF L+4 <= LEN(I$) THEN IF MID$(I$, L, 4) = "SHUT" {
			PRINT "You are a true believer. Work hard and be happy. Bye."
			END
			}
		}
	
	IF I$ = P$ THEN PRINT "Please dont repeat yourself! " : GOTO userInput
}


// --- FIND KEYWORD ---

// scan for keywords > save keyword of highest priority to S, T, and F$
// if no keywords > default to 36 <NOKEYFOUND> > say something non-commital:EXIT

findKeyword() {

	RESTORE
	S=0
	FOR K = 1 TO N1
		READ K$
		IF S > 0 THEN 390  //next k
	
		FOR L = 1 TO LEN(I$) - LEN(K$)+1
			IF MID$( I$, L, LEN(K$) ) = K$ THEN S=K : T=L : F$=K$
			NEXT L
	
	//390
	NEXT K

	IF S > 0 THEN K=S : L=T : GOTO 430  // conjugate
	K = 36 : GOTO 630  //getReply
}


// CONJUGATION and TRANSLATION

// take right part of string and conjugate correctly
// token after a keyword is saved
// pairs of translation strings are read
// upon occurence of a translation string other word-pair is substituted
// ensure there is only one leading space in translated string

//430
conjugate() {
	RESTORE : FOR X = 1 TO N1 : READ Z$ : NEXT X
	
	C$ = "" + RIGHT$( I$, LEN(I$) - LEN(F$) - L+1 )
	FOR X = 1 TO N2/2 {
		READ S$, R$
		FOR L = 1 TO LEN(C$)
			IF L+LEN(S$) > LEN(C$) THEN 560
			IF MID$( C$, L, LEN(S$) ) <> S$ then 560
			C$ = LEFT$( C$, L-1) + R$ + RIGHT$( C$, LEN(C$)-L-LEN(S$)+1 )
			L = L + LEN(S$)
			GOTO 600
		
			//560
			IF L + LEN(R$) > LEN(C$) THEN 600
			IF MID$( C$, L, LEN(R$) ) <> R$ THEN 600
			
			C$ = LEFT$( C$, L-1) + S$ + RIGHT$( C$, LEN(C$)-L-LEN(R$)+1 )
			L = L + LEN(S$)
			
			//600
			NEXT L
		NEXT X
	}
}


// --- GET REPLY ---

// using: R(keyword#), S(keyword#), N(keyword#) —> locate correct reply
// pointer for next reply is bumped and reset if too large
// if reply string ends with * it is printed with translated string
// else reply string printed alone
// previously entered input string is saved to permit checking of repetitive input
// back to userInput

//630
getReply() {
	RESTORE : FOR X = 1 TO N1 + N2 : READ Z$ : NEXT X
	FOR X = 1 TO R(K) : READ F$ : NEXT X
	
	R(K) = R(K) + 1
	IF R(K) > N(K) THEN R(K) = S(K)
	
	IF RIGHT$( F$, 1 ) <> "*" THEN PRINT F$ : P$ = F$ : GOTO userInput
	PRINT LEFT$( F$, LEN(F$)-1 ) ; C$
	P$ = F$ : GOTO userInput
}


// ---| PROGRAM DATA |--- 

// KEYWORDS 
DATA "can you", "can I", "you are", "youre", "I dont", "I feel"
DATA "why dont you", "why cant I", "are you", "I cant", "I am", "Im "
DATA "you ", "I want", "what", "how", "who", "where", "when", "why"
DATA "name", "cause", "sorry", "dream", "hello", "hi", "maybe"
DATA "no", "your", "always", "think", "alike", "yes", "friend"
DATA "computer", NOKEYFOUND"

// CONJUGATION DATA
DATA " are ", " am ", " were ", " was ", " you ", " I ", " your ", " my "
DATA " Ive ", " youve ", " Im ", " youre "

// REPLIES
DATA "Don't you believe that I can*"
DATA "Perhaps you would like to be able to*"
DATA "You want me to be able to*"
DATA "Perhaps you don't want to*"
DATA "Do you want to be able to*"
DATA "What makes you think I am*"
DATA "Does it please you to believe that I am*"
DATA "Perhaps you would like to be*"
DATA "Do you sometimes wish you were*"
DATA "Don't you really*"
DATA "Why don't you*"
DATA "Do you wish to be able to*"
DATA "Does that trouble you?"
DATA "Tell me more about such feelings."
DATA "Do you often feel*"
DATA "Do you enjoy feeling*"
DATA "Do you really believe I don't*"
DATA "Perhaps in good time I will*"
DATA "Do you want me to*"
DATA "Do you think you should be able to*"
DATA "Why can't you*"
DATA "Why are you interested in whether or not I am*"
DATA "Would you prefer if I were not*"
DATA "Perhaps in your fantasies I am*"
DATA "How do you know I can't*"
DATA "Have you tried?"
DATA "Perhaps you can now*"
DATA "Did you come to me because you are*"
DATA "How long have you been*"
DATA "Do you believe it is normal to be*"
DATA "Do you enjoy being*"
DATA "We were discussing you — not me."
DATA "Oh, I*"
DATA "You're not really talking about me, are you?"
DATA "What would it mean if you got*"
DATA "Why do you want*"
DATA "Suppose you soon got*"
DATA "What if you never got*"
DATA "I sometimes also want*"
DATA "Why do you ask?"
DATA "Does that question interest you?"
DATA "What answer would please you the most?"
DATA "What do you think?"
DATA "Are such questions on your mind often?"
DATA "What is it you really want to know?"
DATA "Have you asked anyone else?"
DATA "Have you asked such questions before?"
DATA "What else comes to mind when you ask that?"
DATA "Names don't interest me."
DATA "I don't care about names. Go on.."
DATA "Is that the real reason?"
DATA "Don't any other reasons come to mind?"
DATA "Does that reason explain anything else?"
DATA "What other reason might there be?"
DATA "Please don't apologize."
DATA "Apologies are not necessary."
DATA "What feelings do you get when you apologize."
DATA "Don't be so defensive."
DATA "What does that dream suggest to you?"
DATA "Do you dream often?"
DATA "What persons appear in your dreams?"
DATA "Are you distrubed by your dreams?"
DATA "How do you do.. Please state your problem."
DATA "You don't seem quite certain."
DATA "Why the uncertain tone?"
DATA " Can't you be more positive?"
DATA "You aren't sure?"
DATA "Don't you know?"
DATA "Are you saying that just to be negative?"
DATA "You are being a bit negative."
DATA "Why not?"
DATA "Are you sure?"
DATA "Who no?"
DATA "Why are you concerned about my*"
DATA "What about your own*"
DATA "Can you think of a specific example?"
DATA "When?"
DATA "What are you thinking of?"
DATA "Really, always?"
DATA "Do you really think so?"
DATA "But you are not sure you*"
DATA "Do you doubt you*"
DATA "In what way?"
DATA "What resemblance do you see?"
DATA "What does the similarity suggest to you?"
DATA "What other connections do you see?"
DATA "Could there really be some connection?"
DATA "How?"
DATA "You seem quite positive."
DATA "Are you sure?"
DATA "I see."
DATA "I understand."
DATA "Why do you bring up the topic of friends?"
DATA "Do your friends worry you?"
DATA "Do your friends pick on you?"
DATA "Are you sure you have any friends?"
DATA "Do you impose on your friends?"
DATA "Perhaps your love for friends worries you?"
DATA "Do computers worry you?"
DATA "Are you talking about me in particular?"
DATA "Are you frightened by machines?"
DATA "Why do you mention computers?"
DATA "What do you think computers have to do with your problem?"
DATA "Don't you think computers can help people?"
DATA "What is it about machines that worries you?"
DATA "Say, do you have any psychological problems?"
DATA "What does that suggest to you?"
DATA "I see."
DATA "I'm not sure I understand you fully."
DATA "Come, come — elucidate your thoughts."
DATA "Can you elaborate on that?"
DATA "That is quite interesting."


// REPLY FINDING DATA

DATA { 1, 3, 4, 2, 6, 4, 6, 4, 10, 4, 
	14, 3, 17, 3, 20, 2, 22, 3, 25, 3, 
	28, 4, 28, 4, 32, 3, 35, 5, 40, 9, 
	40, 9, 40, 9, 40, 9, 40, 9, 40, 9, 
	49, 2, 51, 4, 55, 4, 59, 4, 63, 1, 
	63, 1, 64, 5, 69, 5, 74, 2, 76, 4, 
	80, 3, 83, 7, 90, 3, 93, 6, 99, 7, 
	106, 6 }


--| OUTPUT |----- 

Hi! I'm Eliza. What is your problem?

? I'm an IBM 370
Did you come to me because you are an IBM 370

? Yes I want a new line printer
What would it mean if you got a new line printer

? About 1200 LPM
Say, do you have any psychological problems? 

? How would you know you're a spetravideo
What makes you think I am a spectravideo

? It says so above your keyboard
Why are you concerned about my keyboard

? Cause that is what I'm typing on
How long have you been typing on

? Since I typed RUN
What does that suggest to you?

? You're the shrink
Does it please you to believe that I am the shrink

? Don't you know
We were discussing you — not me. 

? I am beginning to wonder about you
Did you come to me because you are beginning to wonder about me

? I didn't start to wonder about you until after I came to you

--
